//Mateus//

#include <Servo.h>

 const int pingPin = 10;
 long duration;
 int cm;
 int distancia;
 int Led = 2; 
 Servo motorE;
 Servo motorD;
 Servo motorS;

void setup() {
  Serial.begin(9600);
  pinMode(2, OUTPUT);
  motorS.attach(11);
  motorS.write(90);
  
}

void loop() {

  leituraSensor();
    
    byte cmd = Serial.read();

      if (cm> 30){
      cm=30;
      }

  byte dataToSent;
    
     dataToSent = (byte)cm;
     
    Serial.write(dataToSent);
    Serial.println();
    
      delay(200); 

    switch(cmd){
      case (0x01):
      //Led on
        digitalWrite(2,HIGH);
        break;
        
      case (0x02):
      //Led off
        digitalWrite(2,LOW);
        break;
        
      case(0x03):
      //Frente
        motorE.attach(13);
        motorD.attach(12);
        motorE.writeMicroseconds(1700);
        motorD.writeMicroseconds(-1700);
        break;
        
      case(0x04):
      //Direita
        motorE.attach(13);
        motorD.attach(12);
        motorE.writeMicroseconds(1700);
        motorD.writeMicroseconds(1700);
        delay(500);
        motorE.detach();
        motorD.detach();
        break;
        
      case(0x05):
      //Esquerda
        motorE.attach(13);
        motorD.attach(12);
        motorE.writeMicroseconds(1500);
        motorD.writeMicroseconds(1500);
        delay(450);
        motorE.detach();
        motorD.detach();
        break;
        
      case(0x06):
      //Ré
        digitalWrite(2,LOW);
        motorE.attach(13);
        motorD.attach(12);
        motorE.writeMicroseconds(-1700);
        motorD.writeMicroseconds(1700);
        digitalWrite(2,HIGH);
        break;
        
      case(0x07):
      //Parar
        motorE.detach();
        motorD.detach();
        break;

      case (0x08):
      //Sensor p/ direita
        motorS.write(0);
        break;

      case (0x09):
      //Sensor p/ esquerda
        motorS.write(180);
        break;

      case (0x0a):
      //Sensor no centro
        motorS.write(90);
        break;

      case (0x0b):
      //180º
        motorE.attach(13);
        motorD.attach(12);
        motorE.writeMicroseconds(1700);
        motorD.writeMicroseconds(1700);
        delay(1700);
        motorE.detach();
        motorD.detach();
        break;
    }
  
}

int leituraSensor(){

  pinMode(pingPin, OUTPUT);
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(pingPin, LOW);

  pinMode(pingPin, INPUT);
  duration = pulseIn(pingPin, HIGH);

  cm = microsecondsToCentimeters(duration);

  return cm;
     
  }

  long microsecondsToCentimeters(long microseconds){ 
    /* Função matemática para converter tempo 
    em distância do sensor Ultrassônico */
  return microseconds / 29 / 2;
}
